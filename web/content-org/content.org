#+STARTUP: content
#+HUGO_BASE_DIR: ..
#+HUGO_AUTO_SET_LASTMOD: t
#+AUTHOR:

* Version :@version:
:PROPERTIES:
:EXPORT_HUGO_SECTION: version/
:END:
** DONE Linux updater
:PROPERTIES:
:EXPORT_DATE: 2019-11-26
:EXPORT_FILE_NAME: version_0.7.8.md
:EXPORT_HUGO_CATEGORIES: version 0.7.8
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :description "Linux updater fixed and new keybindings."
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :author "Zebra"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :type "post"
:END:
Until now, when you tried to update the client in a Linux machine, it wouldn't
succeed. That was because accessing API's /latestrelease page returned a Windows
version.

After updating the API and the client, Linux releases could be finally
downloaded by the updater.

In this hotfix, some keybindings were added:
- Toggle display entity names <F2>
- Zoom without keypad <+/->
 
** DONE Improved UI system
:PROPERTIES:
:EXPORT_DATE: 2019-11-04
:EXPORT_FILE_NAME: version_0.7.7.md
:EXPORT_HUGO_CATEGORIES: version 0.7.7
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :description "Creating UI components now is easier. Support for themes."
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :author "Zebra"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :type "post"
:END:
UI system needed to be rewritten. Everytime a new UI component had to be
added, there was a long process of tweaking variables, rewritting things, adding
other attributes to main components...

In order to solve all of this problems, I came to the simple but efficient
solution of creating a code generator according to [[https://raylibtech.itch.io/rguilayout][Raylib GUI layout]] file
formats.

Also rewritting the entire UI system made creating new themes a possibility.
Themes are stored in */assets//* folder.

** DONE Local item data
:PROPERTIES:
:EXPORT_DATE: 2019-09-11
:EXPORT_FILE_NAME: version_0.7.6.md
:EXPORT_HUGO_CATEGORIES: version 0.7.6
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :description "Item info stored locally. No need to update the whole game to modify items."
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :author "Zebra"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :type "post"
:END:
[[/images/post/post-1.jpg]]
Dummy text right here. Some more text.
* Version :@version:
:PROPERTIES:
:EXPORT_HUGO_SECTION: version/
:END:
** DONE Linux updater
:PROPERTIES:
:EXPORT_DATE: 2019-11-26
:EXPORT_FILE_NAME: version_0.7.8.md
:EXPORT_HUGO_CATEGORIES: version 0.7.8
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :description "Linux updater fixed and new keybindings."
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :author "Zebra"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :type "post"
:END:
Until now, when you tried to update the client in a Linux machine, it wouldn't
succeed. That was because accessing API's /latestrelease page returned a Windows
version.

After updating the API and the client, Linux releases could be finally
downloaded by the updater.

In this hotfix, some keybindings were added:
- Toggle display entity names <F2>
- Zoom without keypad <+/->
 
** DONE Improved UI system
:PROPERTIES:
:EXPORT_DATE: 2019-11-04
:EXPORT_FILE_NAME: version_0.7.7.md
:EXPORT_HUGO_CATEGORIES: version 0.7.7
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :description "Creating UI components now is easier. Support for themes."
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :author "Zebra"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :type "post"
:END:
UI system needed to be rewritten. Everytime a new UI component had to be
added, there was a long process of tweaking variables, rewritting things, adding
other attributes to main components...

In order to solve all of this problems, I came to the simple but efficient
solution of creating a code generator according to [[https://raylibtech.itch.io/rguilayout][Raylib GUI layout]] file
formats.

Also rewritting the entire UI system made creating new themes a possibility.
Themes are stored in */assets//* folder.

** DONE Local item data
:PROPERTIES:
:EXPORT_DATE: 2019-09-11
:EXPORT_FILE_NAME: version_0.7.6.md
:EXPORT_HUGO_CATEGORIES: version 0.7.6
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :description "Item info stored locally. No need to update the whole game to modify items."
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :author "Zebra"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :type "post"
:END:
In the past versions, it was difficult to modify item properties and there was a
need for recompiling. I decided to store item properties in the game database.
If there was a need to update items, it will be as simple as exporting the
database objects to a /JSON/ file.

In further versions, I expect to have separate updating methods. One for the
base game and another for the assets (items' properties included).

* Hotfixes :@hotfix:
:PROPERTIES:
:EXPORT_HUGO_SECTION: hotfixes/
:END:
** DONE Linux updater fix
:PROPERTIES:
:EXPORT_DATE: 2019-12-10
:EXPORT_FILE_NAME: version_0.7.9.md
:EXPORT_HUGO_CATEGORIES: hotfix 0.7.9
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :description "Linux updater tweaks"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :author "Zebra".
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :type "post"
:END:
Minor changes to improve updater stability and function tweaks to fix some errors.
